SQL> @"E:\Sem 3 Lab\DBL\Ex3\Ex-03-DBL.sql"
SQL> 
SQL> DROP TABLE ORDER_LIST;

Table dropped.

SQL> DROP TABLE ORDERS;

Table dropped.

SQL> DROP TABLE PIZZA;

Table dropped.

SQL> DROP TABLE CUSTOMER;

Table dropped.

SQL> 
SQL> REM Drop tables
SQL> REM Create CUSTOMER table
SQL> CREATE TABLE CUSTOMER (
  2    cust_id varchar(10),
  3    cust_name varchar(50),
  4    address varchar(50),
  5    phone NUMBER
  6  );

Table created.

SQL> 
SQL> REM Create PIZZA table
SQL> CREATE TABLE PIZZA (
  2    pizza_id varchar(10),
  3    pizza_type varchar(50),
  4    unit_price NUMBER
  5  );

Table created.

SQL> 
SQL> REM Create ORDERS table
SQL> CREATE TABLE ORDERS (
  2    order_no varchar(10),
  3    cust_id varchar(10),
  4    order_date DATE,
  5    delv_date DATE
  6  );

Table created.

SQL> 
SQL> REM Create ORDER_LIST table
SQL> CREATE TABLE ORDER_LIST (
  2    order_no varchar(10),
  3    pizza_id varchar(10),
  4    qty NUMBER NOT NULL
  5  );

Table created.

SQL> 
SQL> ALTER TABLE CUSTOMER ADD CONSTRAINT customer_id PRIMARY KEY(cust_id);

Table altered.

SQL> ALTER TABLE PIZZA ADD CONSTRAINT pi_id PRIMARY KEY(pizza_id);

Table altered.

SQL> ALTER TABLE ORDERS ADD CONSTRAINT order_number PRIMARY KEY(order_no);

Table altered.

SQL> ALTER TABLE ORDERS ADD CONSTRAINT fk_customer_id FOREIGN KEY(cust_id) REFERENCES CUSTOMER(cust_id);

Table altered.

SQL> ALTER TABLE ORDER_LIST ADD CONSTRAINT fk_order FOREIGN KEY(order_no) REFERENCES ORDERS(order_no);

Table altered.

SQL> ALTER TABLE ORDER_LIST ADD CONSTRAINT fk_pizza FOREIGN KEY (pizza_id) REFERENCES PIZZA(pizza_id);

Table altered.

SQL> 
SQL> REm customer(cust_id, cust_name, address, phone)
SQL> REM pizza (pizza_id, pizza_type, unit_price)
SQL> REM orders(order_no, cust_id, order_date ,delv_date, total_amt)
SQL> REM order_list(order_no, pizza_id, qty)
SQL> 
SQL> 
SQL> REM ------------------------------------------------------------------------------------------
> 
SQL> REM customer(cust_id, cust_name,address,phone)
SQL> 
SQL> insert into customer values('c001','Hari','32 RING ROAD,ALWARPET',9001200031);

1 row created.

SQL> insert into customer values('c002','Prasanth','42 bull ROAD,numgambakkam',9444120003);

1 row created.

SQL> insert into customer values('c003','Neethu','12a RING ROAD,ALWARPET',9840112003);

1 row created.

SQL> insert into customer values('c004','Jim','P.H ROAD,Annanagar',9845712993);

1 row created.

SQL> insert into customer values('c005','Sindhu','100 feet ROAD,vadapalani',9840166677);

1 row created.

SQL> insert into customer values('c006','Brinda','GST ROAD, TAMBARAM', 9876543210);

1 row created.

SQL> insert into customer values('c007','Ramkumar','2nd cross street, Perambur',8566944453);

1 row created.

SQL> 
SQL> REM pizza (pizza_id, pizza_type, unit_price)
SQL> 
SQL> insert into pizza values('p001','pan',130);

1 row created.

SQL> insert into pizza values('p002','grilled',230);

1 row created.

SQL> insert into pizza values('p003','italian',200);

1 row created.

SQL> insert into pizza values('p004','spanish',260);

1 row created.

SQL> insert into pizza values('p005','supremo',250);

1 row created.

SQL> 
SQL> 
SQL> 
SQL> REM orders(order_no, cust_id, order_date ,delv_date)
SQL> 
SQL> insert into orders values('OP100','c001','28-JUN-2015','28-JUN-2015');

1 row created.

SQL> insert into orders values('OP200','c002','28-JUN-2015','29-JUN-2015');

1 row created.

SQL> 
SQL> insert into orders values('OP300','c003','29-JUN-2015','29-JUN-2015');

1 row created.

SQL> insert into orders values('OP400','c004','29-JUN-2015','29-JUN-2015');

1 row created.

SQL> insert into orders values('OP500','c001','29-JUN-2015','30-JUN-2015');

1 row created.

SQL> insert into orders values('OP600','c002','29-JUN-2015','29-JUN-2015');

1 row created.

SQL> 
SQL> insert into orders values('OP700','c005','30-JUN-2015','30-JUN-2015');

1 row created.

SQL> insert into orders values('OP800','c006','30-JUN-2015','30-JUN-2015');

1 row created.

SQL> 
SQL> 
SQL> REM order_list(order_no, pizza_id, qty)
SQL> 
SQL> insert into order_list values('OP100','p001',3);

1 row created.

SQL> insert into order_list values('OP100','p002',2);

1 row created.

SQL> insert into order_list values('OP100','p003',2);

1 row created.

SQL> insert into order_list values('OP100','p004',5);

1 row created.

SQL> insert into order_list values('OP100','p005',4);

1 row created.

SQL> 
SQL> insert into order_list values('OP200','p003',2);

1 row created.

SQL> insert into order_list values('OP200','p001',6);

1 row created.

SQL> insert into order_list values('OP200','p004',8);

1 row created.

SQL> 
SQL> insert into order_list values('OP300','p003',3);

1 row created.

SQL> 
SQL> insert into order_list values('OP400','p001',3);

1 row created.

SQL> insert into order_list values('OP400','p004',1);

1 row created.

SQL> 
SQL> insert into order_list values('OP500','p003',6);

1 row created.

SQL> insert into order_list values('OP500','p004',5);

1 row created.

SQL> insert into order_list values('OP500','p001',null);
insert into order_list values('OP500','p001',null)
                                             *
ERROR at line 1:
ORA-01400: cannot insert NULL into ("SYSTEM"."ORDER_LIST"."QTY") 


SQL> 
SQL> insert into order_list values('OP600','p002',3);

1 row created.

SQL> insert into order_list values('OP600','p003',2);

1 row created.

SQL> 
SQL> REM 1. For each pizza, display the total quantity ordered by the customers.
SQL> SELECT P.pizza_id, P.pizza_type, SUM(OL.qty) as total_ordered_quantity FROM PIZZA P
  2  JOIN ORDER_LIST OL ON P.pizza_id = OL.pizza_id GROUP BY P.pizza_id, P.pizza_type;

PIZZA_ID   PIZZA_TYPE                                                           
---------- --------------------------------------------------                   
TOTAL_ORDERED_QUANTITY                                                          
----------------------                                                          
p001       pan                                                                  
                    12                                                          
                                                                                
p002       grilled                                                              
                     5                                                          
                                                                                
p003       italian                                                              
                    15                                                          
                                                                                

PIZZA_ID   PIZZA_TYPE                                                           
---------- --------------------------------------------------                   
TOTAL_ORDERED_QUANTITY                                                          
----------------------                                                          
p004       spanish                                                              
                    19                                                          
                                                                                
p005       supremo                                                              
                     4                                                          
                                                                                

SQL> 
SQL> REM 2. Find the pizza type(s) that is not delivered on the ordered day.
SQL> SELECT DISTINCT P.pizza_type FROM PIZZA P
  2  LEFT JOIN ORDER_LIST OL ON P.pizza_id = OL.pizza_id
  3  LEFT JOIN ORDERS O ON OL.order_no = O.order_no
  4  WHERE O.delv_date <> O.order_date OR O.delv_date IS NULL;

PIZZA_TYPE                                                                      
--------------------------------------------------                              
pan                                                                             
italian                                                                         
spanish                                                                         

SQL> 
SQL> REM 3. Display the number of order(s) placed by each customer whether or not he/she placed the order.
SQL> SELECT C.cust_id, C.cust_name, COUNT(O.order_no) as total_orders_placed FROM CUSTOMER C
  2  LEFT JOIN ORDERS O ON C.cust_id = O.cust_id GROUP BY C.cust_id, C.cust_name;

CUST_ID    CUST_NAME                                                            
---------- --------------------------------------------------                   
TOTAL_ORDERS_PLACED                                                             
-------------------                                                             
c001       Hari                                                                 
                  2                                                             
                                                                                
c002       Prasanth                                                             
                  2                                                             
                                                                                
c003       Neethu                                                               
                  1                                                             
                                                                                

CUST_ID    CUST_NAME                                                            
---------- --------------------------------------------------                   
TOTAL_ORDERS_PLACED                                                             
-------------------                                                             
c004       Jim                                                                  
                  1                                                             
                                                                                
c005       Sindhu                                                               
                  1                                                             
                                                                                
c006       Brinda                                                               
                  1                                                             
                                                                                

CUST_ID    CUST_NAME                                                            
---------- --------------------------------------------------                   
TOTAL_ORDERS_PLACED                                                             
-------------------                                                             
c007       Ramkumar                                                             
                  0                                                             
                                                                                

7 rows selected.

SQL> 
SQL> REM 4. Find the pairs of pizzas such that the ordered quantity of the first pizza type is more than the second for the order OP100.
SQL> SELECT OL1.pizza_id AS first_pizza, OL2.pizza_id AS second_pizza
  2  FROM ORDER_LIST OL1, ORDER_LIST OL2 WHERE OL1.order_no = OL2.order_no
  3  AND OL1.order_no = 'OP100' AND OL1.qty > OL2.qty;

FIRST_PIZZ SECOND_PIZ                                                           
---------- ----------                                                           
p004       p001                                                                 
p005       p001                                                                 
p001       p002                                                                 
p004       p002                                                                 
p005       p002                                                                 
p001       p003                                                                 
p004       p003                                                                 
p005       p003                                                                 
p004       p005                                                                 

9 rows selected.

SQL> 
SQL> REM 5. Display the details (order number, pizza type, customer name, qty) of the pizza with ordered quantity more than the average
SQL> REM ordered quantity of pizzas.
SQL> SELECT O.order_no, P.pizza_type, C.cust_name, OL.qty FROM ORDER_LIST OL
  2  JOIN ORDERS O ON OL.order_no = O.order_no JOIN PIZZA P ON OL.pizza_id = P.pizza_id
  3  JOIN CUSTOMER C ON O.cust_id = C.cust_id WHERE OL.qty > (SELECT AVG(qty) FROM ORDER_LIST);

ORDER_NO   PIZZA_TYPE                                                           
---------- --------------------------------------------------                   
CUST_NAME                                                 QTY                   
-------------------------------------------------- ----------                   
OP100      spanish                                                              
Hari                                                        5                   
                                                                                
OP100      supremo                                                              
Hari                                                        4                   
                                                                                
OP200      pan                                                                  
Prasanth                                                    6                   
                                                                                

ORDER_NO   PIZZA_TYPE                                                           
---------- --------------------------------------------------                   
CUST_NAME                                                 QTY                   
-------------------------------------------------- ----------                   
OP200      spanish                                                              
Prasanth                                                    8                   
                                                                                
OP500      italian                                                              
Hari                                                        6                   
                                                                                
OP500      spanish                                                              
Hari                                                        5                   
                                                                                

6 rows selected.

SQL> 
SQL> REM 6. Find the customer(s) who ordered for more than one pizza type in each order.
SQL> SELECT C.cust_id, C.cust_name FROM CUSTOMER C WHERE (
  2    SELECT COUNT(DISTINCT OL.pizza_id) FROM ORDER_LIST OL
  3    JOIN ORDERS O ON OL.order_no = O.order_no WHERE O.cust_id = C.cust_id
  4  ) > 1;

CUST_ID    CUST_NAME                                                            
---------- --------------------------------------------------                   
c001       Hari                                                                 
c002       Prasanth                                                             
c004       Jim                                                                  

SQL> 
SQL> REM 7. Display the details (order number, pizza type, customer name, qty) of the pizza with ordered quantity more than the average
SQL> REM ordered quantity of each pizza type.
SQL> SELECT O.order_no, P.pizza_type, C.cust_name, OL.qty FROM ORDER_LIST OL
  2  JOIN ORDERS O ON OL.order_no = O.order_no JOIN PIZZA P ON OL.pizza_id = P.pizza_id
  3  JOIN CUSTOMER C ON O.cust_id = C.cust_id WHERE OL.qty > (SELECT AVG(qty)
  4  FROM ORDER_LIST WHERE pizza_id = P.pizza_id);

ORDER_NO   PIZZA_TYPE                                                           
---------- --------------------------------------------------                   
CUST_NAME                                                 QTY                   
-------------------------------------------------- ----------                   
OP100      spanish                                                              
Hari                                                        5                   
                                                                                
OP200      pan                                                                  
Prasanth                                                    6                   
                                                                                
OP200      spanish                                                              
Prasanth                                                    8                   
                                                                                

ORDER_NO   PIZZA_TYPE                                                           
---------- --------------------------------------------------                   
CUST_NAME                                                 QTY                   
-------------------------------------------------- ----------                   
OP500      italian                                                              
Hari                                                        6                   
                                                                                
OP500      spanish                                                              
Hari                                                        5                   
                                                                                
OP600      grilled                                                              
Prasanth                                                    3                   
                                                                                

6 rows selected.

SQL> 
SQL> REM 8. Display the details (order number, pizza type, customer name, qty) of the pizza with ordered quantity more than the average
SQL> REM ordered quantity of its pizza type. (Using correlated subquery)
SQL> SELECT O.order_no, P.pizza_type, C.cust_name, OL.qty FROM ORDER_LIST OL
  2  JOIN ORDERS O ON OL.order_no = O.order_no JOIN PIZZA P ON OL.pizza_id = P.pizza_id
  3  JOIN CUSTOMER C ON O.cust_id = C.cust_id WHERE OL.qty > (
  4    SELECT AVG(qty) FROM ORDER_LIST WHERE pizza_id = OL.pizza_id
  5  );

ORDER_NO   PIZZA_TYPE                                                           
---------- --------------------------------------------------                   
CUST_NAME                                                 QTY                   
-------------------------------------------------- ----------                   
OP100      spanish                                                              
Hari                                                        5                   
                                                                                
OP200      pan                                                                  
Prasanth                                                    6                   
                                                                                
OP200      spanish                                                              
Prasanth                                                    8                   
                                                                                

ORDER_NO   PIZZA_TYPE                                                           
---------- --------------------------------------------------                   
CUST_NAME                                                 QTY                   
-------------------------------------------------- ----------                   
OP500      italian                                                              
Hari                                                        6                   
                                                                                
OP500      spanish                                                              
Hari                                                        5                   
                                                                                
OP600      grilled                                                              
Prasanth                                                    3                   
                                                                                

6 rows selected.

SQL> 
SQL> REM 9. Display the customer details who placed all pizza types in a single order.
SQL> SELECT C.cust_id, C.cust_name FROM CUSTOMER C WHERE (
  2    SELECT COUNT(DISTINCT OL.pizza_id) FROM ORDER_LIST OL
  3    JOIN ORDERS O ON OL.order_no = O.order_no WHERE O.cust_id = C.cust_id) = (SELECT COUNT(DISTINCT pizza_id) FROM PIZZA
  4  );

CUST_ID    CUST_NAME                                                            
---------- --------------------------------------------------                   
c001       Hari                                                                 

SQL> 
SQL> REM 10. Display the order details that contain the pizza quantity more than the average quantity of any of Pan or Italian pizza type.
SQL> SELECT OL.order_no, OL.pizza_id
  2  FROM ORDER_LIST OL
  3  JOIN PIZZA P ON P.pizza_id = OL.pizza_id
  4  WHERE OL.qty > (
  5  SELECT AVG(OL2.qty)
  6  FROM ORDER_LIST OL2
  7  WHERE OL2.pizza_id IN (
  8  (SELECT P1.pizza_id FROM PIZZA P1 WHERE P1.pizza_type = 'pan')
  9  UNION
 10  (SELECT P1.pizza_id FROM PIZZA P1 WHERE P1.pizza_type = 'italian')
 11  )
 12  );

ORDER_NO   PIZZA_ID                                                             
---------- ----------                                                           
OP100      p004                                                                 
OP100      p005                                                                 
OP200      p001                                                                 
OP200      p004                                                                 
OP500      p003                                                                 
OP500      p004                                                                 

6 rows selected.

SQL> 
SQL> REM 11. Find the order(s) that contain Pan pizza but not the Italian pizza type.
SQL> SELECT O.order_no, O.cust_id FROM orders O
  2  JOIN order_list OL ON O.order_no = OL.order_no
  3  MINUS SELECT O.order_no, O.cust_id
  4  FROM orders O
  5  JOIN order_list OL
  6  ON O.order_no = OL.order_no
  7  WHERE OL.pizza_id IN (
  8  SELECT pizza_id FROM pizza
  9  WHERE pizza_type = 'italian');

ORDER_NO   CUST_ID                                                              
---------- ----------                                                           
OP400      c004                                                                 

SQL> 
SQL> 
SQL> REM 12. Display the customer(s) who ordered both Italian and Grilled pizza type.
SQL> SELECT DISTINCT O.cust_id, C.cust_name, C.address, C.phone
  2  FROM order_list OL, customer  C
  3  JOIN orders O
  4  ON (O.cust_id = C.cust_id)
  5  WHERE OL.order_no = O.order_no AND OL.pizza_id IN (
  6  SELECT pizza_id
  7  FROM pizza
  8  WHERE pizza_type = 'italian')
  9  INTERSECT SELECT DISTINCT O.cust_id, C.cust_name, C.address, C.phone
 10  FROM order_list OL, customer  C
 11  JOIN orders O
 12  ON (O.cust_id = C.cust_id)
 13  WHERE OL.order_no = O.order_no AND OL.pizza_id IN (
 14  SELECT pizza_id
 15  FROM pizza
 16  WHERE pizza_type = 'grilled');

CUST_ID    CUST_NAME                                                            
---------- --------------------------------------------------                   
ADDRESS                                                 PHONE                   
-------------------------------------------------- ----------                   
c001       Hari                                                                 
32 RING ROAD,ALWARPET                              9001200031                   
                                                                                
c002       Prasanth                                                             
42 bull ROAD,numgambakkam                          9444120003                   
                                                                                

SQL> spool off
